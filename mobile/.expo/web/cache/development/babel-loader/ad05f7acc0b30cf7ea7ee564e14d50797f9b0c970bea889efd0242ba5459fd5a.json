{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { api } from \"../services/api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function InfluencerLookupScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    handle = _useState2[0],\n    setHandle = _useState2[1];\n  var lookup = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!handle.trim()) {\n        Alert.alert('Error', 'Please enter a handle');\n        return;\n      }\n      try {\n        var res = yield api.get(\"/lookup?handle=\" + handle.trim());\n        navigation.navigate('RealityScore', {\n          influencer: res.data.influencer\n        });\n      } catch (err) {\n        Alert.alert('Error', 'Could not find influencer');\n      }\n    });\n    return function lookup() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Scan Influencer\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter handle (e.g., @sunny)\",\n      value: handle,\n      onChangeText: setHandle\n    }), _jsx(Button, {\n      title: \"Scan\",\n      onPress: lookup\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 15\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","Alert","api","jsx","_jsx","jsxs","_jsxs","InfluencerLookupScreen","_ref","navigation","_useState","_useState2","_slicedToArray","handle","setHandle","lookup","_ref2","_asyncToGenerator","trim","alert","res","get","navigate","influencer","data","err","apply","arguments","style","styles","container","children","title","input","placeholder","value","onChangeText","onPress","create","flex","padding","justifyContent","fontSize","fontWeight","textAlign","marginBottom","borderWidth","borderColor","borderRadius"],"sources":["/Users/domprabhu/trustfluence/mobile/src/screens/InfluencerLookupScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet, Alert } from 'react-native';\nimport { api } from '../services/api';\n\nexport default function InfluencerLookupScreen({ navigation }) {\n  const [handle, setHandle] = useState('');\n\n  const lookup = async () => {\n    if (!handle.trim()) {\n      Alert.alert('Error', 'Please enter a handle');\n      return;\n    }\n\n    try {\n      const res = await api.get(`/lookup?handle=${handle.trim()}`);\n      navigation.navigate('RealityScore', { influencer: res.data.influencer });\n    } catch (err) {\n      Alert.alert('Error', 'Could not find influencer');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Scan Influencer</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter handle (e.g., @sunny)\"\n        value={handle}\n        onChangeText={setHandle}\n      />\n      <Button title=\"Scan\" onPress={lookup} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 20, justifyContent: 'center' },\n  title: { fontSize: 24, fontWeight: 'bold', textAlign: 'center', marginBottom: 20 },\n  input: { borderWidth: 1, borderColor: '#ccc', borderRadius: 8, padding: 12, marginBottom: 15 }\n});\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAExC,SAASC,GAAG;AAA0B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEtC,eAAe,SAASC,sBAAsBA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACzD,IAAAC,SAAA,GAA4Bf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExB,IAAMI,MAAM;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MACzB,IAAI,CAACJ,MAAM,CAACK,IAAI,CAAC,CAAC,EAAE;QAClBjB,KAAK,CAACkB,KAAK,CAAC,OAAO,EAAE,uBAAuB,CAAC;QAC7C;MACF;MAEA,IAAI;QACF,IAAMC,GAAG,SAASlB,GAAG,CAACmB,GAAG,qBAAmBR,MAAM,CAACK,IAAI,CAAC,CAAG,CAAC;QAC5DT,UAAU,CAACa,QAAQ,CAAC,cAAc,EAAE;UAAEC,UAAU,EAAEH,GAAG,CAACI,IAAI,CAACD;QAAW,CAAC,CAAC;MAC1E,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZxB,KAAK,CAACkB,KAAK,CAAC,OAAO,EAAE,2BAA2B,CAAC;MACnD;IACF,CAAC;IAAA,gBAZKJ,MAAMA,CAAA;MAAA,OAAAC,KAAA,CAAAU,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYX;EAED,OACErB,KAAA,CAACV,IAAI;IAACgC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B3B,IAAA,CAACP,IAAI;MAAC+B,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAe,CAAM,CAAC,EACjD3B,IAAA,CAACN,SAAS;MACR8B,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,6BAA6B;MACzCC,KAAK,EAAEtB,MAAO;MACduB,YAAY,EAAEtB;IAAU,CACzB,CAAC,EACFV,IAAA,CAACL,MAAM;MAACiC,KAAK,EAAC,MAAM;MAACK,OAAO,EAAEtB;IAAO,CAAE,CAAC;EAAA,CACpC,CAAC;AAEX;AAEA,IAAMc,MAAM,GAAG7B,UAAU,CAACsC,MAAM,CAAC;EAC/BR,SAAS,EAAE;IAAES,IAAI,EAAE,CAAC;IAAEC,OAAO,EAAE,EAAE;IAAEC,cAAc,EAAE;EAAS,CAAC;EAC7DT,KAAK,EAAE;IAAEU,QAAQ,EAAE,EAAE;IAAEC,UAAU,EAAE,MAAM;IAAEC,SAAS,EAAE,QAAQ;IAAEC,YAAY,EAAE;EAAG,CAAC;EAClFZ,KAAK,EAAE;IAAEa,WAAW,EAAE,CAAC;IAAEC,WAAW,EAAE,MAAM;IAAEC,YAAY,EAAE,CAAC;IAAER,OAAO,EAAE,EAAE;IAAEK,YAAY,EAAE;EAAG;AAC/F,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}